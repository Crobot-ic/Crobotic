import{_ as t,c as o,ag as r,o as s}from"./chunks/framework.D9jvb0sS.js";const i="/Crobotic/assets/fond-esp.CK2YTbiv.png",m=JSON.parse('{"title":"⚡ ESP32","description":"","frontmatter":{},"headers":[],"relativePath":"Formations/ESP32/esp32-intro.md","filePath":"Formations/ESP32/esp32-intro.md"}'),n={name:"Formations/ESP32/esp32-intro.md"};function a(l,e,d,u,c,p){return s(),o("div",null,e[0]||(e[0]=[r('<img src="'+i+'" style="height:186px;" alt=""><h1 id="⚡-esp32" tabindex="-1">⚡ ESP32 <a class="header-anchor" href="#⚡-esp32" aria-label="Permalink to &quot;⚡ ESP32&quot;">​</a></h1><h2 id="🌟-introduction" tabindex="-1">🌟 Introduction <a class="header-anchor" href="#🌟-introduction" aria-label="Permalink to &quot;🌟 Introduction&quot;">​</a></h2><p>L&#39;ESP32 est une carte de développement <strong>Wi-Fi et Bluetooth</strong> basée sur le module ESP32 d&#39;Espressif. Cette carte est parfaite pour les projets IoT grâce à ses fonctionnalités avancées et sa puissance. Voici ses caractéristiques principales :</p><ul><li><strong>Processeur Xtensa dual-core</strong> 32 bits cadencé à 240 MHz.</li><li><strong>Mémoire :</strong> 520 Ko de SRAM et 4 Mo de mémoire flash.</li><li><strong>Connectivité :</strong> Wi-Fi 802.11 b/g/n et Bluetooth 4.2 intégrés.</li><li><strong>Compatibilité :</strong> Programmable avec l&#39;IDE Arduino ou MicroPython.</li></ul><p>📌 <strong>Différence clé avec Arduino Uno :</strong> L&#39;ESP32 fonctionne uniquement en 3.3V, contrairement à l&#39;Arduino Uno (5V et 3.3V).</p><h2 id="✨-points-forts-de-l-esp32" tabindex="-1">✨ Points forts de l&#39;ESP32 <a class="header-anchor" href="#✨-points-forts-de-l-esp32" aria-label="Permalink to &quot;✨ Points forts de l&#39;ESP32&quot;">​</a></h2><ul><li>🔗 Connectivité intégrée Wi-Fi et Bluetooth.</li><li>🌍 Idéal pour les projets <strong>IoT</strong>.</li><li>🛠️ Compatible avec <strong>Arduino</strong> et <strong>MicroPython</strong>.</li><li>⚡ Puissance : Processeur à 240 MHz (contre 16 MHz pour l&#39;Arduino Uno).</li><li>🔋 Faible consommation d&#39;énergie, parfait pour les appareils autonomes.</li></ul><h2 id="📌-les-pins-de-l-esp32" tabindex="-1">📌 Les PINs de l&#39;ESP32 <a class="header-anchor" href="#📌-les-pins-de-l-esp32" aria-label="Permalink to &quot;📌 Les PINs de l&#39;ESP32&quot;">​</a></h2><h3 id="🖇️-principales-broches-disponibles" tabindex="-1">🖇️ Principales broches disponibles : <a class="header-anchor" href="#🖇️-principales-broches-disponibles" aria-label="Permalink to &quot;🖇️ Principales broches disponibles :&quot;">​</a></h3><ul><li><strong>Alimentation :</strong> Broches pour alimentation et masse.</li><li><strong>VBAT :</strong> Permet l&#39;alimentation via une batterie.</li><li><strong>VIN :</strong> Alimentation externe.</li><li><strong>GPIO :</strong> (General Purpose Input/Output) Broches d&#39;entrées/sorties numériques pour piloter des capteurs ou des actionneurs.</li><li><strong>ADC :</strong> Convertisseurs analogiques numériques pour lire des signaux analogiques.</li><li><strong>Communication série :</strong> UART, SPI, et I2C pour dialoguer avec d&#39;autres composants.</li></ul><img src="https://camo.githubusercontent.com/f2dca0248dbc2e4de13a0a523ed5d0a076e03e67cdf0c6b28c78353f2045c73f/68747470733a2f2f696d616765732e73717561726573706163652d63646e2e636f6d2f636f6e74656e742f76312f3563383564383938373762393033363036313236653664662f63346139383936352d373431352d343134652d383335382d3333396533613063653833372f7468756d622d74696e797069636f2d76335f70696e6f75745f3132303070782e6a70673f666f726d61743d3235303077" alt="Pin ESP32" style="width:500px;"><p><a href="https://github.com/thelastoutpostworkshop/gpio_viewer/blob/main/README.md" target="_blank" rel="noreferrer">Lien vers l&#39;ensemble des cartes ESP32 et leurs ports associés</a></p><h3 id="🔘-les-boutons-de-controle" tabindex="-1">🔘 Les boutons de contrôle : <a class="header-anchor" href="#🔘-les-boutons-de-controle" aria-label="Permalink to &quot;🔘 Les boutons de contrôle :&quot;">​</a></h3><ul><li><strong>RESET :</strong> Réinitialise le module.</li><li><strong>BOOT :</strong> Démarre le module ou met à jour son firmware.</li></ul><hr><h2 id="⚔️-esp32-vs-esp8266-quelle-carte-choisir" tabindex="-1">⚔️ ESP32 vs ESP8266 : Quelle carte choisir ? <a class="header-anchor" href="#⚔️-esp32-vs-esp8266-quelle-carte-choisir" aria-label="Permalink to &quot;⚔️ ESP32 vs ESP8266 : Quelle carte choisir ?&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>Caractéristique</strong></th><th><strong>ESP32</strong></th><th><strong>ESP8266</strong></th></tr></thead><tbody><tr><td><strong>Processeur</strong></td><td>Dual-core à 240 MHz</td><td>Single-core à 80/160 MHz</td></tr><tr><td><strong>Mémoire</strong></td><td>520 Ko SRAM, 4 Mo flash</td><td>160 Ko SRAM, 4 Mo flash</td></tr><tr><td><strong>Wi-Fi + Bluetooth</strong></td><td>Oui (Bluetooth 4.2)</td><td>Wi-Fi uniquement</td></tr><tr><td><strong>Nombre de GPIO</strong></td><td>Plus de 30 broches</td><td>Moins de 20 broches</td></tr><tr><td><strong>Consommation d&#39;énergie</strong></td><td>Moyenne</td><td>Faible</td></tr><tr><td><strong>Prix</strong></td><td>Plus élevé</td><td>Plus économique</td></tr></tbody></table><blockquote><img src="https://i0.wp.com/randomnerdtutorials.com/wp-content/uploads/2019/08/esp32-vs-esp8266-devlopment-boards.jpg?w=750&amp;quality=100&amp;strip=all&amp;ssl=1" alt="ESP32 vs ESP8266" width="300"> ESP32 à gauche, ESP8266 à droite. </blockquote><h2 id="🎯-pourquoi-choisir-l-esp32" tabindex="-1">🎯 Pourquoi choisir l&#39;ESP32 ? <a class="header-anchor" href="#🎯-pourquoi-choisir-l-esp32" aria-label="Permalink to &quot;🎯 Pourquoi choisir l&#39;ESP32 ?&quot;">​</a></h2><p>Avec l&#39;ESP32, vous disposez d&#39;une carte puissante et flexible pour développer vos idées, que ce soit pour un objet connecté, un système de contrôle automatisé ou une solution domotique. L&#39;ESP32 vous offre la liberté de concevoir tout en maximisant les performances !</p>',21)]))}const g=t(n,[["render",a]]);export{m as __pageData,g as default};
